#ifndef OBJECT_H
#define OBJECT_H

#include <QGraphicsRectItem>
#include <QBrush>
#include <QTimer>
#include <QPainter>

class objectt : public QObject
{
    Q_OBJECT
public:
    objectt();

    QTimer* timer=new QTimer(0);//таймер падений фигур, 0-значит, нет предка
    int interval=450;//начальная скорость падения фигуры(для уровня 6)
    bool fastdown=false;//
    bool gameover=true;
    int score=0;//переменная счета
    int positionxfromcenter=3; int positionyfromup=0;//позиция фигуры по осям x и y
    bool ignore=true;//отображает, будут ли кнопки start и down срабатывать(нужна для меню)
    int numberfigure;//номер текущей фигуры
    int nextnumberfigure;//номер следующей фигуры
    int numberpovorot;//номер поворота фигуры
    int mas[4][4]={
        {0, 0, 0, 0},
        {0, 0, 0, 0},
        {0, 0, 0, 0},
        {0, 0, 0, 0}
    };//массив текущей фигуры
    int masnextfigure[4][4]={
        {0, 0, 0, 0},
        {0, 0, 0, 0},
        {0, 0, 0, 0},
        {0, 0, 0, 0}
    };//массив следующей фигуры
    int mapfigure[28][16]={
        {1, 1, 0, 0,    0, 0, 1, 0,    1, 1, 0, 0,    0, 0, 1, 0},
        {0, 1, 1, 0,    0, 1, 1, 0,    0, 1, 1, 0,    0, 1, 1, 0},
        {0, 0, 0, 0,    0, 1, 0, 0,    0, 0, 0, 0,    0, 1, 0, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0},

        {0, 1, 1, 0,    0, 1, 0, 0,    0, 1, 1, 0,    0, 1, 0, 0},
        {1, 1, 0, 0,    0, 1, 1, 0,    1, 1, 0, 0,    0, 1, 1, 0},
        {0, 0, 0, 0,    0, 0, 1, 0,    0, 0, 0, 0,    0, 0, 1, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0},

        {0, 1, 1, 0,    0, 1, 1, 0,    0, 1, 1, 0,    0, 1, 1, 0},
        {0, 1, 1, 0,    0, 1, 1, 0,    0, 1, 1, 0,    0, 1, 1, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0},

        {0, 0, 1, 0,    0, 1, 0, 0,    1, 1, 1, 0,    0, 1, 1, 0},
        {1, 1, 1, 0,    0, 1, 0, 0,    1, 0, 0, 0,    0, 0, 1, 0},
        {0, 0, 0, 0,    0, 1, 1, 0,    0, 0, 0, 0,    0, 0, 1, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0},

        {1, 0, 0, 0,    0, 1, 1, 0,    1, 1, 1, 0,    0, 0, 1, 0},
        {1, 1, 1, 0,    0, 1, 0, 0,    0, 0, 1, 0,    0, 0, 1, 0},
        {0, 0, 0, 0,    0, 1, 0, 0,    0, 0, 0, 0,    0, 1, 1, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0},

        {0, 1, 0, 0,    1, 1, 1, 1,    0, 1, 0, 0,    1, 1, 1, 1},
        {0, 1, 0, 0,    0, 0, 0, 0,    0, 1, 0, 0,    0, 0, 0, 0},
        {0, 1, 0, 0,    0, 0, 0, 0,    0, 1, 0, 0,    0, 0, 0, 0},
        {0, 1, 0, 0,    0, 0, 0, 0,    0, 1, 0, 0,    0, 0, 0, 0},

        {0, 1, 0, 0,    0, 1, 0, 0,    0, 0, 0, 0,    0, 1, 0, 0},
        {1, 1, 1, 0,    0, 1, 1, 0,    1, 1, 1, 0,    1, 1, 0, 0},
        {0, 0, 0, 0,    0, 1, 0, 0,    0, 1, 0, 0,    0, 1, 0, 0},
        {0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0,    0, 0, 0, 0}

    };//карта со всеми фигурами и всеми возможными их поворотами

    void draw(QColor color, QString massiv);//нарисовать фигуру выбранного цвета для главной сцены или для отображения следующей фигуры

    void autodraw();//нарисовать следующую фигуру после падения очередной

    void drawnextfigure();//нарисовать следующую фигуру в правой области экрана

    int left();//движение фигуры налево

    int right();//движение фигуры направо

    void setrect(QGraphicsRectItem *rect[20][10]);//установить игровое поле для класса object

    void setnextfigurerect(QGraphicsRectItem *nextfigurerect[4][3]);//установить поле отображения следующей фигуры для класса object

    void newfigurepovorot();//метод для записи координат фигуры при повороте в переменную mas

    void newfigure();//метод для создания новой фигуры

    void startgame();//метод для начала новой игры

    int povorot();//поворот фигуры

    void deleting();//удаление заполненных строк игрового поля

    void functionfastdown();//функция быстрого падения фигуры

public slots:
    int down();//движение фигуры вниз
signals:
    void signalnewfigure();//сигнал о создании новой фигуры
    void signalgameover();//сигнал о завершении игры
public:

    QGraphicsRectItem *rectt[20][10];//игровое поле
    QGraphicsRectItem *nextfigurerectt[4][3];//поле отображения следующей фигуры

    /*Методы-аксцессоры*/
    void setPositionxfromcenter(int value);
    void setPositionyfromup(int value);
    void setGameover(bool value);
    bool getGameover() const;
};

#endif // OBJECT_H
